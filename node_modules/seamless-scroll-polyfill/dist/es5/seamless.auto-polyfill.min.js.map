{"version":3,"file":"seamless.auto-polyfill.min.js","sources":["../../src/common.ts","../../src/Element.scroll.ts","../../src/Element.scrollBy.ts","../../src/Element.scrollIntoView.ts","../../src/Element.scrollTo.ts","../../src/Window.scroll.ts","../../src/Window.scrollBy.ts","../../src/Window.scrollTo.ts","../../src/index.ts","../../src/auto-polyfill.ts"],"sourcesContent":["const ease = (k: number) => {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n};\n\nconst DURATION = 500;\n\nexport const isScrollBehaviorSupported = (): boolean => \"scrollBehavior\" in document.documentElement.style;\n\nexport const original = {\n    _elementScroll: undefined as typeof Element.prototype.scroll | undefined,\n    get elementScroll() {\n        return (this._elementScroll ||=\n            HTMLElement.prototype.scroll ||\n            HTMLElement.prototype.scrollTo ||\n            function (this: Element, x: number, y: number) {\n                this.scrollLeft = x;\n                this.scrollTop = y;\n            });\n    },\n\n    _elementScrollIntoView: undefined as typeof Element.prototype.scrollIntoView | undefined,\n    get elementScrollIntoView() {\n        return (this._elementScrollIntoView ||= HTMLElement.prototype.scrollIntoView);\n    },\n\n    _windowScroll: undefined as typeof window.scroll | undefined,\n    get windowScroll() {\n        return (this._windowScroll ||= window.scroll || window.scrollTo);\n    },\n};\n\ntype Prototype = typeof HTMLElement.prototype | typeof SVGElement.prototype | typeof Element.prototype;\n\nexport const modifyPrototypes = (modification: (prototype: Prototype) => void): void => {\n    const prototypes = [HTMLElement.prototype, SVGElement.prototype, Element.prototype];\n    prototypes.forEach((prototype) => modification(prototype));\n};\n\nexport interface IAnimationOptions {\n    duration?: number;\n    timingFunc?: (k: number) => number;\n}\n\nexport interface IScrollToOptions extends ScrollToOptions, IAnimationOptions {}\n\nexport interface IScrollIntoViewOptions extends ScrollIntoViewOptions, IAnimationOptions {}\n\nexport interface IContext extends IAnimationOptions {\n    timeStamp: number;\n    startX: number;\n    startY: number;\n    targetX: number;\n    targetY: number;\n    rafId: number;\n    method: (x: number, y: number) => void;\n    callback: () => void;\n}\n\nexport const now = (): number => window.performance?.now?.() ?? Date.now();\n\nexport const step = (context: IContext): void => {\n    const currentTime = now();\n\n    const elapsed = (currentTime - context.timeStamp) / (context.duration || DURATION);\n    if (elapsed > 1) {\n        context.method(context.targetX, context.targetY);\n        context.callback();\n        return;\n    }\n    const value = (context.timingFunc || ease)(elapsed);\n\n    const currentX = context.startX + (context.targetX - context.startX) * value;\n    const currentY = context.startY + (context.targetY - context.startY) * value;\n\n    context.method(currentX, currentY);\n\n    context.rafId = requestAnimationFrame(() => {\n        step(context);\n    });\n};\n\n// https://drafts.csswg.org/cssom-view/#normalize-non-finite-values\nexport const nonFinite = (value: number): number => {\n    if (!isFinite(value)) {\n        return 0;\n    }\n    return Number(value);\n};\n\nexport const isObject = (value: unknown): value is Record<string, unknown> => {\n    const type = typeof value;\n    return value !== null && (type === \"object\" || type === \"function\");\n};\n","import {\n    IAnimationOptions,\n    IContext,\n    IScrollToOptions,\n    isObject,\n    isScrollBehaviorSupported,\n    modifyPrototypes,\n    nonFinite,\n    now,\n    original,\n    step,\n} from \"./common.js\";\n\nexport const elementScroll = (element: Element, options: IScrollToOptions): void => {\n    const originalBoundFunc = original.elementScroll.bind(element);\n\n    if (options.left === undefined && options.top === undefined) {\n        return;\n    }\n\n    const startX = element.scrollLeft;\n    const startY = element.scrollTop;\n\n    const targetX = nonFinite(options.left ?? startX);\n    const targetY = nonFinite(options.top ?? startY);\n\n    if (options.behavior !== \"smooth\") {\n        return originalBoundFunc(targetX, targetY);\n    }\n\n    const removeEventListener = () => {\n        window.removeEventListener(\"wheel\", cancelScroll);\n        window.removeEventListener(\"touchmove\", cancelScroll);\n    };\n\n    const context: IContext = {\n        timeStamp: now(),\n        duration: options.duration,\n        startX,\n        startY,\n        targetX,\n        targetY,\n        rafId: 0,\n        method: originalBoundFunc,\n        timingFunc: options.timingFunc,\n        callback: removeEventListener,\n    };\n\n    const cancelScroll = () => {\n        cancelAnimationFrame(context.rafId);\n        removeEventListener();\n    };\n\n    window.addEventListener(\"wheel\", cancelScroll, {\n        passive: true,\n        once: true,\n    });\n    window.addEventListener(\"touchmove\", cancelScroll, {\n        passive: true,\n        once: true,\n    });\n\n    step(context);\n};\n\nexport const elementScrollPolyfill = (animationOptions?: IAnimationOptions): void => {\n    if (isScrollBehaviorSupported()) {\n        return;\n    }\n\n    const originalFunc = original.elementScroll;\n\n    modifyPrototypes(\n        (prototype) =>\n            (prototype.scroll = function scroll() {\n                if (arguments.length === 1) {\n                    const scrollOptions = arguments[0];\n                    if (!isObject(scrollOptions)) {\n                        throw new TypeError(\n                            \"Failed to execute 'scroll' on 'Element': parameter 1 ('options') is not an object.\",\n                        );\n                    }\n\n                    return elementScroll(this, { ...scrollOptions, ...animationOptions });\n                }\n\n                return originalFunc.apply(this, arguments as any);\n            }),\n    );\n};\n","import {\n    IAnimationOptions,\n    IScrollToOptions,\n    isObject,\n    isScrollBehaviorSupported,\n    modifyPrototypes,\n    nonFinite,\n} from \"./common.js\";\nimport { elementScroll } from \"./Element.scroll.js\";\n\nexport const elementScrollBy = (element: Element, options: IScrollToOptions): void => {\n    const left = nonFinite(options.left || 0) + element.scrollLeft;\n    const top = nonFinite(options.top || 0) + element.scrollTop;\n\n    return elementScroll(element, { ...options, left, top });\n};\n\nexport const elementScrollByPolyfill = (animationOptions?: IAnimationOptions): void => {\n    if (isScrollBehaviorSupported()) {\n        return;\n    }\n\n    modifyPrototypes(\n        (prototype) =>\n            (prototype.scrollBy = function scrollBy() {\n                if (arguments.length === 1) {\n                    const scrollByOptions = arguments[0];\n                    if (!isObject(scrollByOptions)) {\n                        throw new TypeError(\n                            \"Failed to execute 'scrollBy' on 'Element': parameter 1 ('options') is not an object.\",\n                        );\n                    }\n\n                    return elementScrollBy(this, { ...scrollByOptions, ...animationOptions });\n                }\n\n                const left = Number(arguments[0]);\n                const top = Number(arguments[1]);\n\n                return elementScrollBy(this, { left, top });\n            }),\n    );\n};\n","import {\n    IAnimationOptions,\n    IScrollIntoViewOptions,\n    isObject,\n    isScrollBehaviorSupported,\n    modifyPrototypes,\n    original,\n} from \"./common.js\";\nimport { elementScroll } from \"./Element.scroll.js\";\n\nconst enum ScrollAlignment {\n    AlignToEdgeIfNeeded,\n    AlignCenterAlways,\n    AlignTopAlways,\n    AlignBottomAlways,\n    AlignLeftAlways,\n    AlignRightAlways,\n}\nconst enum ScrollOrientation {\n    HorizontalScroll,\n    VerticalScroll,\n}\n\n// https://cs.chromium.org/chromium/src/third_party/blink/renderer/core/dom/element.cc?l=647-681&rcl=02a6466f4efa021e4e198f373eccda3cfc56142b\nconst toPhysicalAlignment = (\n    options: ScrollIntoViewOptions,\n    axis: ScrollOrientation,\n    isHorizontalWritingMode: boolean,\n    isFlippedBlocksMode: boolean,\n): ScrollAlignment => {\n    const alignment =\n        (axis === ScrollOrientation.HorizontalScroll && isHorizontalWritingMode) ||\n        (axis === ScrollOrientation.VerticalScroll && !isHorizontalWritingMode)\n            ? options.inline\n            : options.block;\n\n    if (alignment === \"center\") {\n        return ScrollAlignment.AlignCenterAlways;\n    }\n    if (alignment === \"nearest\") {\n        return ScrollAlignment.AlignToEdgeIfNeeded;\n    }\n    if (alignment === \"start\") {\n        return axis === ScrollOrientation.HorizontalScroll\n            ? isFlippedBlocksMode\n                ? ScrollAlignment.AlignRightAlways\n                : ScrollAlignment.AlignLeftAlways\n            : ScrollAlignment.AlignTopAlways;\n    }\n    if (alignment === \"end\") {\n        return axis === ScrollOrientation.HorizontalScroll\n            ? isFlippedBlocksMode\n                ? ScrollAlignment.AlignLeftAlways\n                : ScrollAlignment.AlignRightAlways\n            : ScrollAlignment.AlignBottomAlways;\n    }\n\n    // Default values\n    if (isHorizontalWritingMode) {\n        return axis === ScrollOrientation.HorizontalScroll\n            ? ScrollAlignment.AlignToEdgeIfNeeded\n            : ScrollAlignment.AlignTopAlways;\n    }\n    return axis === ScrollOrientation.HorizontalScroll\n        ? ScrollAlignment.AlignLeftAlways\n        : ScrollAlignment.AlignToEdgeIfNeeded;\n};\n\n// code from stipsan/compute-scroll-into-view\n// https://github.com/stipsan/compute-scroll-into-view/blob/5396c6b78af5d0bbce11a7c4e93cc3146546fcd3/src/index.ts\n/**\n * Find out which edge to align against when logical scroll position is \"nearest\"\n * Interesting fact: \"nearest\" works similarily to \"if-needed\", if the element is fully visible it will not scroll it\n *\n * Legends:\n * ┌────────┐ ┏ ━ ━ ━ ┓\n * │ target │   frame\n * └────────┘ ┗ ━ ━ ━ ┛\n */\nconst alignNearest = (\n    scrollingEdgeStart: number,\n    scrollingEdgeEnd: number,\n    scrollingSize: number,\n    scrollingBorderStart: number,\n    scrollingBorderEnd: number,\n    elementEdgeStart: number,\n    elementEdgeEnd: number,\n    elementSize: number,\n): number => {\n    /**\n     * If element edge A and element edge B are both outside scrolling box edge A and scrolling box edge B\n     *\n     *          ┌──┐\n     *        ┏━│━━│━┓\n     *          │  │\n     *        ┃ │  │ ┃        do nothing\n     *          │  │\n     *        ┗━│━━│━┛\n     *          └──┘\n     *\n     *  If element edge C and element edge D are both outside scrolling box edge C and scrolling box edge D\n     *\n     *    ┏ ━ ━ ━ ━ ┓\n     *   ┌───────────┐\n     *   │┃         ┃│        do nothing\n     *   └───────────┘\n     *    ┗ ━ ━ ━ ━ ┛\n     */\n    if (\n        (elementEdgeStart < scrollingEdgeStart && elementEdgeEnd > scrollingEdgeEnd) ||\n        (elementEdgeStart > scrollingEdgeStart && elementEdgeEnd < scrollingEdgeEnd)\n    ) {\n        return 0;\n    }\n\n    /**\n     * If element edge A is outside scrolling box edge A and element height is less than scrolling box height\n     *\n     *          ┌──┐\n     *        ┏━│━━│━┓         ┏━┌━━┐━┓\n     *          └──┘             │  │\n     *  from  ┃      ┃     to  ┃ └──┘ ┃\n     *\n     *        ┗━ ━━ ━┛         ┗━ ━━ ━┛\n     *\n     * If element edge B is outside scrolling box edge B and element height is greater than scrolling box height\n     *\n     *        ┏━ ━━ ━┓         ┏━┌━━┐━┓\n     *                           │  │\n     *  from  ┃ ┌──┐ ┃     to  ┃ │  │ ┃\n     *          │  │             │  │\n     *        ┗━│━━│━┛         ┗━│━━│━┛\n     *          │  │             └──┘\n     *          │  │\n     *          └──┘\n     *\n     * If element edge C is outside scrolling box edge C and element width is less than scrolling box width\n     *\n     *       from                 to\n     *    ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n     *  ┌───┐                 ┌───┐\n     *  │ ┃ │       ┃         ┃   │     ┃\n     *  └───┘                 └───┘\n     *    ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n     *\n     * If element edge D is outside scrolling box edge D and element width is greater than scrolling box width\n     *\n     *       from                 to\n     *    ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n     *        ┌───────────┐   ┌───────────┐\n     *    ┃   │     ┃     │   ┃         ┃ │\n     *        └───────────┘   └───────────┘\n     *    ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n     */\n    if (\n        (elementEdgeStart <= scrollingEdgeStart && elementSize <= scrollingSize) ||\n        (elementEdgeEnd >= scrollingEdgeEnd && elementSize >= scrollingSize)\n    ) {\n        return elementEdgeStart - scrollingEdgeStart - scrollingBorderStart;\n    }\n\n    /**\n     * If element edge B is outside scrolling box edge B and element height is less than scrolling box height\n     *\n     *        ┏━ ━━ ━┓         ┏━ ━━ ━┓\n     *\n     *  from  ┃      ┃     to  ┃ ┌──┐ ┃\n     *          ┌──┐             │  │\n     *        ┗━│━━│━┛         ┗━└━━┘━┛\n     *          └──┘\n     *\n     * If element edge A is outside scrolling box edge A and element height is greater than scrolling box height\n     *\n     *          ┌──┐\n     *          │  │\n     *          │  │             ┌──┐\n     *        ┏━│━━│━┓         ┏━│━━│━┓\n     *          │  │             │  │\n     *  from  ┃ └──┘ ┃     to  ┃ │  │ ┃\n     *                           │  │\n     *        ┗━ ━━ ━┛         ┗━└━━┘━┛\n     *\n     * If element edge C is outside scrolling box edge C and element width is greater than scrolling box width\n     *\n     *           from                 to\n     *        ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n     *  ┌───────────┐           ┌───────────┐\n     *  │     ┃     │   ┃       │ ┃         ┃\n     *  └───────────┘           └───────────┘\n     *        ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n     *\n     * If element edge D is outside scrolling box edge D and element width is less than scrolling box width\n     *\n     *           from                 to\n     *        ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n     *                ┌───┐             ┌───┐\n     *        ┃       │ ┃ │       ┃     │   ┃\n     *                └───┘             └───┘\n     *        ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n     *\n     */\n    if (\n        (elementEdgeEnd > scrollingEdgeEnd && elementSize < scrollingSize) ||\n        (elementEdgeStart < scrollingEdgeStart && elementSize > scrollingSize)\n    ) {\n        return elementEdgeEnd - scrollingEdgeEnd + scrollingBorderEnd;\n    }\n\n    return 0;\n};\n\nconst canOverflow = (overflow: string | null) => {\n    return overflow !== \"visible\" && overflow !== \"clip\";\n};\n\nconst isScrollable = (element: Element) => {\n    if (element.clientHeight < element.scrollHeight || element.clientWidth < element.scrollWidth) {\n        const style = getComputedStyle(element);\n        return canOverflow(style.overflowY) || canOverflow(style.overflowX);\n    }\n\n    return false;\n};\n\nconst parentElement = (element: Element): Element | null => {\n    const parentNode = element.parentNode;\n    return (\n        parentNode &&\n        (parentNode.nodeType === Node.DOCUMENT_FRAGMENT_NODE\n            ? (parentNode as ShadowRoot).host\n            : (parentNode as Element))\n    );\n};\n\nexport const elementScrollIntoView = (element: Element, options: IScrollIntoViewOptions): void => {\n    if (!element.ownerDocument.documentElement.contains(element)) {\n        return;\n    }\n\n    // On Chrome and Firefox, document.scrollingElement will return the <html> element.\n    // Safari, document.scrollingElement will return the <body> element.\n    // On Edge, document.scrollingElement will return the <body> element.\n    // IE11 does not support document.scrollingElement, but you can assume its <html>.\n    // Used to handle the top most element that can be scrolled\n    const scrollingElement = document.scrollingElement || document.documentElement;\n\n    // Collect all the scrolling boxes, as defined in the spec: https://drafts.csswg.org/cssom-view/#scrolling-box\n    const frames: Element[] = [];\n\n    for (let cursor = parentElement(element); cursor !== null; cursor = parentElement(cursor)) {\n        // Stop when we reach the viewport\n        if (cursor === scrollingElement) {\n            frames.push(cursor);\n            break;\n        }\n\n        // Skip document.body if it's not the scrollingElement and documentElement isn't independently scrollable\n        if (cursor === document.body && isScrollable(cursor) && !isScrollable(document.documentElement)) {\n            continue;\n        }\n\n        // Now we check if the element is scrollable,\n        // this code only runs if the loop haven't already hit the viewport or a custom boundary\n        if (isScrollable(cursor)) {\n            frames.push(cursor);\n        }\n    }\n\n    // Support pinch-zooming properly, making sure elements scroll into the visual viewport\n    // Browsers that don't support visualViewport\n    // will report the layout viewport dimensions on document.documentElement.clientWidth/Height\n    // and viewport dimensions on window.innerWidth/Height\n    // https://www.quirksmode.org/mobile/viewports2.html\n    // https://bokand.github.io/viewport/index.html\n    const viewportWidth = window.visualViewport ? window.visualViewport.width : innerWidth;\n    const viewportHeight = window.visualViewport ? window.visualViewport.height : innerHeight;\n\n    // Newer browsers supports scroll[X|Y], page[X|Y]Offset is\n    const viewportX = window.scrollX || window.pageXOffset;\n    const viewportY = window.scrollY || window.pageYOffset;\n\n    const {\n        height: targetHeight,\n        width: targetWidth,\n        top: targetTop,\n        right: targetRight,\n        bottom: targetBottom,\n        left: targetLeft,\n    } = element.getBoundingClientRect();\n\n    const computedStyle = getComputedStyle(element);\n    const writingMode =\n        computedStyle.writingMode ||\n        computedStyle.getPropertyValue(\"-webkit-writing-mode\") ||\n        computedStyle.getPropertyValue(\"-ms-writing-mode\") ||\n        \"horizontal-tb\";\n\n    const isHorizontalWritingMode = [\"horizontal-tb\", \"lr\", \"lr-tb\", \"rl\"].some((mode) => mode === writingMode);\n    const isFlippedBlocksWritingMode = [\"vertical-rl\", \"tb-rl\"].some((mode) => mode === writingMode);\n\n    const alignX = toPhysicalAlignment(\n        options,\n        ScrollOrientation.HorizontalScroll,\n        isHorizontalWritingMode,\n        isFlippedBlocksWritingMode,\n    );\n    const alignY = toPhysicalAlignment(\n        options,\n        ScrollOrientation.VerticalScroll,\n        isHorizontalWritingMode,\n        isFlippedBlocksWritingMode,\n    );\n\n    let targetBlock = (() => {\n        switch (alignY) {\n            case ScrollAlignment.AlignTopAlways:\n            case ScrollAlignment.AlignToEdgeIfNeeded:\n                return targetTop;\n            case ScrollAlignment.AlignBottomAlways:\n                return targetBottom;\n            // case ScrollAlignment.AlignCenterAlways:\n            default:\n                return targetTop + targetHeight / 2;\n        }\n    })();\n\n    let targetInline = (() => {\n        switch (alignX) {\n            case ScrollAlignment.AlignCenterAlways:\n                return targetLeft + targetWidth / 2;\n            case ScrollAlignment.AlignRightAlways:\n                return targetRight;\n            // case ScrollAlignment.AlignLeftAlways:\n            // case ScrollAlignment.AlignToEdgeIfNeeded:\n            default:\n                return targetLeft;\n        }\n    })();\n\n    type IAction = () => void;\n\n    const actions: IAction[] = [];\n    for (const frame of frames) {\n        const { height, width, top, right, bottom, left } = frame.getBoundingClientRect();\n\n        const frameStyle = getComputedStyle(frame);\n        const borderLeft = parseInt(frameStyle.borderLeftWidth as string, 10);\n        const borderTop = parseInt(frameStyle.borderTopWidth as string, 10);\n        const borderRight = parseInt(frameStyle.borderRightWidth as string, 10);\n        const borderBottom = parseInt(frameStyle.borderBottomWidth as string, 10);\n\n        let blockScroll = 0;\n        let inlineScroll = 0;\n\n        // The property existance checks for offfset[Width|Height] is because only HTMLElement objects have them,\n        // but any Element might pass by here\n        // @TODO find out if the \"as HTMLElement\" overrides can be dropped\n        const scrollbarWidth =\n            \"offsetWidth\" in frame\n                ? (frame as HTMLElement).offsetWidth - (frame as HTMLElement).clientWidth - borderLeft - borderRight\n                : 0;\n        const scrollbarHeight =\n            \"offsetHeight\" in frame\n                ? (frame as HTMLElement).offsetHeight - (frame as HTMLElement).clientHeight - borderTop - borderBottom\n                : 0;\n\n        if (scrollingElement === frame) {\n            // Handle viewport logic (document.documentElement or document.body)\n\n            switch (alignY) {\n                case ScrollAlignment.AlignTopAlways: {\n                    blockScroll = targetBlock;\n                    break;\n                }\n                case ScrollAlignment.AlignBottomAlways: {\n                    blockScroll = targetBlock - viewportHeight;\n                    break;\n                }\n                case ScrollAlignment.AlignCenterAlways: {\n                    blockScroll = targetBlock - viewportHeight / 2;\n                    break;\n                }\n                case ScrollAlignment.AlignToEdgeIfNeeded: {\n                    blockScroll = alignNearest(\n                        viewportY,\n                        viewportY + viewportHeight,\n                        viewportHeight,\n                        borderTop,\n                        borderBottom,\n                        viewportY + targetBlock,\n                        viewportY + targetBlock + targetHeight,\n                        targetHeight,\n                    );\n                    break;\n                }\n            }\n\n            switch (alignX) {\n                case ScrollAlignment.AlignLeftAlways: {\n                    inlineScroll = targetInline;\n                    break;\n                }\n                case ScrollAlignment.AlignRightAlways: {\n                    inlineScroll = targetInline - viewportWidth;\n                    break;\n                }\n                case ScrollAlignment.AlignCenterAlways: {\n                    inlineScroll = targetInline - viewportWidth / 2;\n                    break;\n                }\n                case ScrollAlignment.AlignToEdgeIfNeeded: {\n                    inlineScroll = alignNearest(\n                        viewportX,\n                        viewportX + viewportWidth,\n                        viewportWidth,\n                        borderLeft,\n                        borderRight,\n                        viewportX + targetInline,\n                        viewportX + targetInline + targetWidth,\n                        targetWidth,\n                    );\n                    break;\n                }\n            }\n\n            // Apply scroll position offsets and ensure they are within bounds\n            blockScroll = Math.max(0, blockScroll + viewportY);\n            inlineScroll = Math.max(0, inlineScroll + viewportX);\n        } else {\n            // Handle each scrolling frame that might exist between the target and the viewport\n\n            switch (alignY) {\n                case ScrollAlignment.AlignTopAlways: {\n                    blockScroll = targetBlock - top - borderTop;\n                    break;\n                }\n                case ScrollAlignment.AlignBottomAlways: {\n                    blockScroll = targetBlock - bottom + borderBottom + scrollbarHeight;\n                    break;\n                }\n                case ScrollAlignment.AlignCenterAlways: {\n                    blockScroll = targetBlock - (top + height / 2) + scrollbarHeight / 2;\n                    break;\n                }\n                case ScrollAlignment.AlignToEdgeIfNeeded: {\n                    blockScroll = alignNearest(\n                        top,\n                        bottom,\n                        height,\n                        borderTop,\n                        borderBottom + scrollbarHeight,\n                        targetBlock,\n                        targetBlock + targetHeight,\n                        targetHeight,\n                    );\n                    break;\n                }\n            }\n\n            switch (alignX) {\n                case ScrollAlignment.AlignLeftAlways: {\n                    inlineScroll = targetInline - left - borderLeft;\n                    break;\n                }\n                case ScrollAlignment.AlignRightAlways: {\n                    inlineScroll = targetInline - right + borderRight + scrollbarWidth;\n                    break;\n                }\n                case ScrollAlignment.AlignCenterAlways: {\n                    inlineScroll = targetInline - (left + width / 2) + scrollbarWidth / 2;\n                    break;\n                }\n                case ScrollAlignment.AlignToEdgeIfNeeded: {\n                    inlineScroll = alignNearest(\n                        left,\n                        right,\n                        width,\n                        borderLeft,\n                        borderRight + scrollbarWidth,\n                        targetInline,\n                        targetInline + targetWidth,\n                        targetWidth,\n                    );\n                    break;\n                }\n            }\n\n            const { scrollLeft, scrollTop } = frame;\n            // Ensure scroll coordinates are not out of bounds while applying scroll offsets\n            blockScroll = Math.max(0, Math.min(scrollTop + blockScroll, frame.scrollHeight - height + scrollbarHeight));\n            inlineScroll = Math.max(0, Math.min(scrollLeft + inlineScroll, frame.scrollWidth - width + scrollbarWidth));\n\n            // Cache the offset so that parent frames can scroll this into view correctly\n            targetBlock += scrollTop - blockScroll;\n            targetInline += scrollLeft - inlineScroll;\n        }\n\n        actions.push(() => elementScroll(frame, { ...options, top: blockScroll, left: inlineScroll }));\n    }\n\n    actions.forEach((run) => run());\n};\n\nexport const elementScrollIntoViewPolyfill = (animationOptions?: IAnimationOptions): void => {\n    if (isScrollBehaviorSupported()) {\n        return;\n    }\n\n    const originalFunc = original.elementScrollIntoView;\n\n    modifyPrototypes(\n        (prototype) =>\n            (prototype.scrollIntoView = function scrollIntoView(): void {\n                const scrollIntoViewOptions = arguments[0];\n\n                if (arguments.length === 1 && isObject(scrollIntoViewOptions)) {\n                    return elementScrollIntoView(this, { ...scrollIntoViewOptions, ...animationOptions });\n                }\n\n                return originalFunc.apply(this, arguments as any);\n            }),\n    );\n};\n","import { IAnimationOptions, isObject, isScrollBehaviorSupported, modifyPrototypes, original } from \"./common.js\";\nimport { elementScroll } from \"./Element.scroll.js\";\n\nexport { elementScroll as elementScrollTo } from \"./Element.scroll.js\";\n\nexport const elementScrollToPolyfill = (animationOptions?: IAnimationOptions): void => {\n    if (isScrollBehaviorSupported()) {\n        return;\n    }\n\n    const originalFunc = original.elementScroll;\n\n    modifyPrototypes(\n        (prototype) =>\n            (prototype.scrollTo = function scrollTo() {\n                if (arguments.length === 1) {\n                    const scrollToOptions = arguments[0];\n                    if (!isObject(scrollToOptions)) {\n                        throw new TypeError(\n                            \"Failed to execute 'scrollTo' on 'Element': parameter 1 ('options') is not an object.\",\n                        );\n                    }\n\n                    const left = Number(scrollToOptions.left);\n                    const top = Number(scrollToOptions.top);\n\n                    return elementScroll(this, { ...scrollToOptions, left, top, ...animationOptions });\n                }\n\n                return originalFunc.apply(this, arguments as any);\n            }),\n    );\n};\n","import {\n    IAnimationOptions,\n    IContext,\n    IScrollToOptions,\n    isObject,\n    isScrollBehaviorSupported,\n    nonFinite,\n    now,\n    original,\n    step,\n} from \"./common.js\";\n\nexport const windowScroll = (options: IScrollToOptions): void => {\n    const originalBoundFunc = original.windowScroll.bind(window);\n\n    if (options.left === undefined && options.top === undefined) {\n        return;\n    }\n\n    const startX = window.scrollX || window.pageXOffset;\n    const startY = window.scrollY || window.pageYOffset;\n\n    const targetX = nonFinite(options.left ?? startX);\n    const targetY = nonFinite(options.top ?? startY);\n\n    if (options.behavior !== \"smooth\") {\n        return originalBoundFunc(targetX, targetY);\n    }\n\n    const removeEventListener = () => {\n        window.removeEventListener(\"wheel\", cancelScroll);\n        window.removeEventListener(\"touchmove\", cancelScroll);\n    };\n\n    const context: IContext = {\n        timeStamp: now(),\n        duration: options.duration,\n        startX,\n        startY,\n        targetX,\n        targetY,\n        rafId: 0,\n        method: originalBoundFunc,\n        timingFunc: options.timingFunc,\n        callback: removeEventListener,\n    };\n\n    const cancelScroll = () => {\n        cancelAnimationFrame(context.rafId);\n        removeEventListener();\n    };\n\n    window.addEventListener(\"wheel\", cancelScroll, {\n        passive: true,\n        once: true,\n    });\n    window.addEventListener(\"touchmove\", cancelScroll, {\n        passive: true,\n        once: true,\n    });\n\n    step(context);\n};\n\nexport const windowScrollPolyfill = (animationOptions?: IAnimationOptions): void => {\n    if (isScrollBehaviorSupported()) {\n        return;\n    }\n\n    const originalFunc = original.windowScroll;\n\n    window.scroll = function scroll() {\n        if (arguments.length === 1) {\n            const scrollOptions = arguments[0];\n            if (!isObject(scrollOptions)) {\n                throw new TypeError(\n                    \"Failed to execute 'scroll' on 'Window': parameter 1 ('options') is not an object.\",\n                );\n            }\n\n            return windowScroll({ ...scrollOptions, ...animationOptions });\n        }\n\n        return originalFunc.apply(this, arguments as any);\n    };\n};\n","import {\n    IAnimationOptions,\n    IScrollToOptions,\n    isObject,\n    isScrollBehaviorSupported,\n    nonFinite,\n    original,\n} from \"./common.js\";\nimport { windowScroll } from \"./Window.scroll.js\";\n\nexport const windowScrollBy = (options: IScrollToOptions): void => {\n    const left = nonFinite(options.left || 0) + (window.scrollX || window.pageXOffset);\n    const top = nonFinite(options.top || 0) + (window.scrollY || window.pageYOffset);\n\n    if (options.behavior !== \"smooth\") {\n        return original.windowScroll.call(window, left, top);\n    }\n\n    return windowScroll({ ...options, left, top });\n};\n\nexport const windowScrollByPolyfill = (animationOptions?: IAnimationOptions): void => {\n    if (isScrollBehaviorSupported()) {\n        return;\n    }\n\n    window.scrollBy = function scrollBy() {\n        if (arguments.length === 1) {\n            const scrollByOptions = arguments[0];\n            if (!isObject(scrollByOptions)) {\n                throw new TypeError(\n                    \"Failed to execute 'scrollBy' on 'Window': parameter 1 ('options') is not an object.\",\n                );\n            }\n\n            return windowScrollBy({ ...scrollByOptions, ...animationOptions });\n        }\n\n        const left = Number(arguments[0]);\n        const top = Number(arguments[1]);\n\n        return windowScrollBy({ left, top });\n    };\n};\n","import { IAnimationOptions, isObject, isScrollBehaviorSupported, original } from \"./common.js\";\nimport { windowScroll } from \"./Window.scroll.js\";\n\nexport { windowScroll as windowScrollTo } from \"./Window.scroll.js\";\n\nexport const windowScrollToPolyfill = (animationOptions?: IAnimationOptions): void => {\n    if (isScrollBehaviorSupported()) {\n        return;\n    }\n\n    const originalFunc = original.windowScroll;\n\n    window.scrollTo = function scrollTo() {\n        if (arguments.length === 1) {\n            const scrollToOptions = arguments[0];\n            if (!isObject(scrollToOptions)) {\n                throw new TypeError(\n                    \"Failed to execute 'scrollTo' on 'Window': parameter 1 ('options') is not an object.\",\n                );\n            }\n\n            const left = Number(scrollToOptions.left);\n            const top = Number(scrollToOptions.top);\n\n            return windowScroll({ ...scrollToOptions, left, top, ...animationOptions });\n        }\n\n        return originalFunc.apply(this, arguments as any);\n    };\n};\n","import { IAnimationOptions, isScrollBehaviorSupported } from \"./common.js\";\nimport { elementScrollPolyfill } from \"./Element.scroll.js\";\nimport { elementScrollByPolyfill } from \"./Element.scrollBy.js\";\nimport { elementScrollIntoViewPolyfill } from \"./Element.scrollIntoView.js\";\nimport { elementScrollToPolyfill } from \"./Element.scrollTo.js\";\nimport { windowScrollPolyfill } from \"./Window.scroll.js\";\nimport { windowScrollByPolyfill } from \"./Window.scrollBy.js\";\nimport { windowScrollToPolyfill } from \"./Window.scrollTo.js\";\n\nexport const polyfill = (options?: IAnimationOptions): void => {\n    if (isScrollBehaviorSupported()) {\n        return;\n    }\n\n    windowScrollPolyfill(options);\n    windowScrollToPolyfill(options);\n    windowScrollByPolyfill(options);\n\n    elementScrollPolyfill(options);\n    elementScrollToPolyfill(options);\n    elementScrollByPolyfill(options);\n    elementScrollIntoViewPolyfill(options);\n};\n\nexport { elementScroll, elementScrollPolyfill } from \"./Element.scroll.js\";\nexport { elementScrollBy, elementScrollByPolyfill } from \"./Element.scrollBy.js\";\nexport { elementScrollIntoView, elementScrollIntoViewPolyfill } from \"./Element.scrollIntoView.js\";\nexport { elementScrollTo, elementScrollToPolyfill } from \"./Element.scrollTo.js\";\nexport { windowScroll, windowScrollPolyfill } from \"./Window.scroll.js\";\nexport { windowScrollBy, windowScrollByPolyfill } from \"./Window.scrollBy.js\";\nexport { windowScrollTo, windowScrollToPolyfill } from \"./Window.scrollTo.js\";\nexport { polyfill as seamless };\n","import { seamless } from \"./index.js\";\n\n((currentScript) => {\n    if (currentScript) {\n        let duration: number | undefined = ~~currentScript.dataset.duration;\n        duration = duration > 0 ? duration : undefined;\n\n        seamless({ duration });\n    }\n})(document.currentScript || document.querySelector(\"script[data-seamless]\"));\n"],"names":["ease","k","Math","cos","PI","isScrollBehaviorSupported","document","documentElement","style","original","_elementScroll","elementScroll","HTMLElement","prototype","scroll","scrollTo","x","y","scrollLeft","scrollTop","_elementScrollIntoView","elementScrollIntoView","scrollIntoView","_windowScroll","windowScroll","window","modifyPrototypes","modification","prototypes","SVGElement","Element","forEach","now","performance","Date","step","context","currentTime","elapsed","timeStamp","duration","method","targetX","targetY","callback","value","timingFunc","currentX","startX","currentY","startY","rafId","requestAnimationFrame","nonFinite","isFinite","isObject","type","element","options","originalBoundFunc","bind","left","top","behavior","removeEventListener","cancelScroll","cancelAnimationFrame","addEventListener","passive","once","elementScrollPolyfill","animationOptions","originalFunc","arguments","length","scrollOptions","TypeError","apply","elementScrollBy","elementScrollByPolyfill","scrollBy","scrollByOptions","toPhysicalAlignment","axis","isHorizontalWritingMode","isFlippedBlocksMode","alignment","inline","block","alignNearest","scrollingEdgeStart","scrollingEdgeEnd","scrollingSize","scrollingBorderStart","scrollingBorderEnd","elementEdgeStart","elementEdgeEnd","elementSize","canOverflow","overflow","isScrollable","clientHeight","scrollHeight","clientWidth","scrollWidth","getComputedStyle","overflowY","overflowX","parentElement","parentNode","nodeType","Node","DOCUMENT_FRAGMENT_NODE","host","ownerDocument","contains","scrollingElement","frames","cursor","push","body","viewportWidth","visualViewport","width","innerWidth","viewportHeight","height","innerHeight","viewportX","scrollX","pageXOffset","viewportY","scrollY","pageYOffset","_b","getBoundingClientRect","targetHeight","targetWidth","targetTop","targetRight","targetBottom","targetLeft","computedStyle","writingMode","getPropertyValue","some","mode","isFlippedBlocksWritingMode","alignX","alignY","targetBlock","targetInline","actions","frame","min","max","_a","top_1","right","bottom","frameStyle","borderLeft","parseInt","borderLeftWidth","borderTop","borderTopWidth","borderRight","borderRightWidth","borderBottom","borderBottomWidth","blockScroll","inlineScroll","scrollbarWidth","offsetWidth","scrollbarHeight","offsetHeight","frames_1","__values","run","elementScrollIntoViewPolyfill","scrollIntoViewOptions","elementScrollToPolyfill","scrollToOptions","windowScrollPolyfill","windowScrollBy","call","windowScrollByPolyfill","windowScrollToPolyfill","polyfill","currentScript","dataset","seamless","querySelector"],"mappings":"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"}